name: run terraform

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: run terraform
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup
        uses: hashicorp/setup-terraform@v1
        env:
          TF_ACTION_WORKING_DIR: 'terraform'

      - name: format
        id: fmt
        run: terraform fmt -check
        env:
          TF_ACTION_WORKING_DIR: 'terraform'

      - name: initialize
        id: init
        run: terraform init -backend-config="bucket=${{ context.repo.repo }}" --backend-config="key=${{ steps.extract_branch.outputs.branch }}" --backend-config="region=us-west-2"
        env:
          TF_ACTION_WORKING_DIR: 'terraform'

      - name: validate
        id: validate
        run: terraform validate -no-color
        env:
          TF_ACTION_WORKING_DIR: 'terraform'

      # runs on pull requests
      # generates a plan on the pull request and applies the plan when merged
      # continues on error so the results can be displayed
      - name: plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env:
          TF_ACTION_WORKING_DIR: 'terraform'

      - name: comment on pull request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # if the plan step failed, bail out now that we commented on the pull request
      - name: plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          TF_ACTION_WORKING_DIR: 'terraform'